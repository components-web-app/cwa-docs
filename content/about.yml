title: 'About'
description: Hello about page
navigation: false
hero:
  title: 'Welcome to :br<span class="text-primary-400 font-semibold">the CWA</span>'
  align: center
cta:
  title: 'The power of a :br <span class="text-primary-400 font-semibold">predictable data structure</span>'
  class: 'mb-8'
  icon: 'i-ph-barbell-fill'
  align: center
  description: |
    With the rise in de-coupled websites and the power of front-end frameworks, we began to think about a data structure that would fit for every website; <span class="text-primary-400 font-semibold">what did every website need?</span>
    :br :br
    We didn't want to have to re-make common functionality for each website every time, and if we had a predictable data structure, it would be possible to have <span class="text-primary-400 font-semibold">a powerful website builder and advanced functionality</span>, while enabling a developer to still <span class="text-primary-400 font-semibold">create any website with complete flexibility</span>.
pageCards:
  items:
    - title: 'Free & Open-Source'
      description: 'The CWA code free, open-source MIT licenced and available on the GitHub repository. Everyone can access, audit, contribute and explore the code and documentation.'
      icon: 'i-simple-icons-opensourceinitiative'
    - title: 'Decoupled web apps'
      description: 'Now you can build the most modern web apps with ease, where the data is served by an API and the front-end is focussed on the UI/UX. Your website data can be accessed by other services, you can proxy to other APIs and take advantage of the ultimate flexibility.'
      icon: 'i-heroicons-circle-stack'
    - title: 'Convention over configuration'
      description: 'Using a set directory and file structure allows the CWA Nuxt module to get you up and running fast. You can also add custom configuration to improve the user experience.'
      icon: 'i-ph-folders'
    - title: 'Low-code, great DX'
      description: 'Easy to use abstract classes, traits, and PHP annotations for the API. The front-end we have ready-to-use components and powerful composables to get you up and running quickly.'
      icon: 'i-heroicons-face-smile'
sections:
  - title: 'The joy of<br><span class="text-primary">draft components</span>'
    description: 'Making updates to a website requires time and thought. With publishable components, drafts are created when you make changes and ready to publish when you are.'
    align: left
    features:
      - name: 'Easy to configure'
        description: 'Just 2 lines of code - an annotation and a trait and your component is upgraded for publishable features.'
        icon: 'i-heroicons-wrench-screwdriver'
      - name: 'Add state-specific validation'
        description: 'Simply use the validation group with the name of the class, a colon, and either `published` or `draft` to apply validation specific to the component state.'
        icon: 'i-heroicons-document-check'
#      - name: 'Set a time to publish'
#        description: 'Set a date and time that you want to your draft component to become published automatically.'
#        icon: 'i-heroicons-clock'
    slot: code
    code: |
      ```php [api/src/Entity/Title.php]
      <?php
      ...

      #[Silverback\Publishable] // [!code focus]
      #[ApiResource(mercure: true)]
      #[Orm\Entity]
      class Title extends AbstractComponent
      {
        use PublishableTrait; // [!code focus]

        #[Assert\NotBlank(groups: ['Title:published'])] // [!code focus]
        #[Orm\Column(type: 'text', nullable: true)]
        public ?string $title = null;
      }

      ```
  - title: 'Control is with<br><span class="text-primary">the web designers</span>'
    description: Unlike other website builders, we leave don't believe website admins should have unlimited creative freedom.
    align: right
    slot: image
    image:
      src: '/images/about/about-designers.svg'
      alt: 'Leave it to the professionals'
    features:
      - name: Be specific
        description: As a developer, you can specifically allow which components you have created to be added in specific component groups.
        icon: i-heroicons-magnifying-glass
      - name: Pre-configure styles
        description: You define the styles that a website admin can select from. No more revisiting a website you created months ago and realising the client has hacked their way to an ugly UI.
        icon: i-heroicons-paint-brush
      - name: Build components your way
        description: Build your components your way - the CWA simply provides helpers to make your life easier.
        icon: i-heroicons-square-3-stack-3d
  - title: 'Stay in<br><span class="text-primary">sync</span>'
    description: 'We leverage and integrate with Mercure to push real-time updates from the API.'
    align: left
    slot: image
    image:
      src: '/images/about/about-sync.svg'
      alt: 'Stay In Sync with the CWA'
    features:
      - name: 'Publish changes immediately'
        description: 'When you make a change, users on the website which this affects get an immediate notification to they can stay up to date.'
        icon: i-ph-paper-plane-tilt
      - name: 'Collaborate on changes'
        description: 'If you are working on an update at the same time as another website admin, you do not have to worry about overwriting each other''s changes'
        icon: i-ph-arrows-in-cardinal
      - name: 'Authenticated updates'
        description: 'With authentication built in by default, the browser will only receive updates for resources they have access to. Website visitors will not be exposed to draft component updates.'
        icon: i-ph-fingerprint
  - title: 'Built for<br><span class="text-primary">speed</span>'
    description: 'Our experience means we have optimised the system for the fastest response times and accelerated user experience.'
    align: right
    slot: image
    image:
      src: '/images/about/about-speed.svg'
      alt: 'CWA is built for Speed - Plane breaking sound barrier'
    features:
      - name: 'Simple, small API responses'
        description: 'Each API request returns a small amount of data and a single resource instead of complex and deeply nested data. '
        icon: i-ph-brackets-curly
      - name: 'Responsive UI'
        description: 'The page UI updates as soon as the primary resources are loaded from the API or cached local storage. Each resource is loaded individually, and the CWA only loads what is required for each page.'
        icon: i-ph-devices
      - name: 'Caching and Preload Hints'
        description: 'We leverage a static cache layer which is only cleared when resources change. We also leverage Vulcain with preload hints to improve response times.'
        icon: i-ph-speedometer
  - title: 'Integrate your own<br><span class="text-primary">file storage</span>'
    description: 'We have built in easily configurable file uploads and a file storage abstraction layer with Flysystem.'
    align: left
    slot: grid
    features:
      - name: 'Easy to configure'
        description: 'Similar to publishable components, with a little config and annotations, you''ll have file uploads setup in no time.'
        icon: i-ph-gear-fill
      - name: 'Pre-configured file-systems'
        description: 'Flysystem has a number of file storage systems already built in, such as Google Cloud, AWS S3, Azure Blob and Local Storage'
        icon: i-ph-cloud-fill
      - name: 'Build your own file storage adapter'
        description: 'Documentation is clear to configure your own file storage and there are more third-party file storage providers available.'
        icon: i-ph-code-fill
    iconGrid:
      - name: 'Flysystem'
        icon: 'i-custom-flysystem'
      - name: 'Google Cloud'
        icon: 'i-custom-google-cloud-storage'
        class: 'text-[#326ce5]'
      - name: 'Amazon AWS S3'
        icon: 'i-custom-aws-s3'
      - name: 'Azure Blob Storage'
        icon: 'i-custom-azure-blob'
      - name: 'OneDrive'
        icon: 'i-custom-one-drive'
      - name: 'Local storage'
        icon: 'i-ph-hard-drives'
        class: text-primary
  - title: 'Optimised stack,<br><span class="text-primary">easy to deploy</span>'
    description: 'When it comes to deploying your application, we know designing the tech stack can be difficult. We have done all the heavy lifting.'
    # description: 'We have included configurations in our CWA template repository which will be an easy setup for your first CWA project. Using Docker you’ll be able to try this out on your own machine quickly - and with our example CI/CD scripts and Helm charts, deploying to a Kubernetes cluster will be a breeze.'
    align: right
    slot: grid
    features:
      - name: 'Dockerized'
        description: 'We have built the tech stack into Docker containers and Docker Compose configurations so it is vendor agnostic and can be deployed easily.'
        icon: 'i-simple-icons-docker'
      - name: 'Kubernetes and a Helm Chart'
        description: 'Deploy to your own Kubernetes cluster and take advantage of HPA and VPA with easy to customise templates.'
        icon: 'i-simple-icons-kubernetes'
      - name: 'Bash scripts for CI'
        description: 'Although we have a vendor specific GitLab configuration, it is easy to create your own for other CI providers as we have created a bash script with functions to carry out the common tasks.'
        icon: i-ph-terminal-window-fill
      - name: 'Optimised tech stack'
        description: 'We use a Caddy server with FrankenPHP in our tech stack for optimal performance. We noted a 95% reduced latency vs a previous FPM configuration when under heavy loads. The Caddy modules for Mercure, Vulcain and Souin are also pre-configured.'
        icon: i-heroicons-server-stack-20-solid
    iconGrid:
      - name: 'Docker'
        icon: 'i-simple-icons-docker'
        class: 'text-[#1D63ED]'
      - name: 'Kubernetes'
        icon: 'i-simple-icons-kubernetes'
        class: 'text-[#326ce5]'
      - name: 'Helm'
        icon: 'i-custom-helm'
      - name: 'GitLab'
        icon: 'i-custom-gitlab'
        class: 'scale-150'
      - name: 'Caddy'
        icon: 'i-custom-caddy'
      - name: 'FrankenPHP'
        icon: 'i-custom-franken-php'
      - name: 'Vulcain Cache'
        icon: 'i-custom-vulcain'
      - name: 'Mercure'
        icon: 'i-custom-mercure'
      - name: 'Souin Static Cache'
        icon: 'i-custom-souin'
        class: text-primary
faq:
  title: Technical FAQs
  description: Some common technical questions we have about the CWA
  items:
    - label: Why did you choose these frameworks?
      content: |
        With a background in PHP and Symfony, and the API Platform framework being well maintained by great developers, we decided to use these advanced features and give some stability as we knew development of this concept could take some time.
        :br :br
        We found VueJS and Nuxt to be incredibly fun frameworks for the front-end, well maintained, and with a strong vibrant community. In both instances we wanted to create a system that was built on the shoulders of giants; we didn’t want to re-invent the wheel.
      defaultOpen: false
    - label: How is the data loaded?
      content: |
        Each individual resource is loaded with a separate request. It results in a lot of HTTP requests, however each part has very small, and most importantly, cacheable, chunks of data.
        :br :br
        We only need to load in the data that is required for each individual page which can result in incredibly fast load times.
    - label: What does “Unlimited minor & patch updates” include?
      content: The CWA is free and open source forever. You will always be able to upgrade to the latest version without warranty or guarantees.
    - label: Do you offer technical support?
      content: |
        Contact us at hello@cwa.rocks or raise issues in our GitHub repositories and we will be happy to help.
        :br :br
        If you need more personal technical help, Silverback Web Apps will be able to assist.
