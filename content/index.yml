title: 'CWA - Components Web App Documentation'
description: With the CWA you will create feature-rich, totally custom web apps with surprisingly little code
navigation: false
hero:
  title: 'Components Web App'
  description: 'Your new <span class="text-primary-400 font-semibold">low-code solution</span> for creating feature-rich, totally <span class="text-primary-400 font-semibold">custom decoupled web apps</span> including an <span class="text-primary-400 font-semibold">intuitive website builder</span> interface'
  orientation: vertical
#  links:
#    - label: Get started
#      icon: i-heroicons-arrow-right-20-solid
#      trailing: true
#      to: '/getting-started'
#      size: lg
#    - label: Use this template
#      icon: i-simple-icons-github
#      size: lg
#      color: gray
#      to: https://github.com/nuxt-ui-pro/docs
#      target: _blank
  code: |
    ```bash [Terminal]
    gh repo create my-website \
      --template="components-web-app/components-web-app" \
      --private --clone
    ```
features:
  title: 'That feeling when<br><span class="text-primary-400">all the hard work is done for you</span>'
  links:
    - label: 'More about the CWA'
      trailingIcon: 'i-heroicons-eye-20-solid'
      color: 'primary'
      to: '/about'
      size: xl
  items:
    - title: 'Draft & Published Components'
      description: 'As a user updates a component it will become a private draft, so they can make changes freely and only publish it when they are ready.'
      icon: 'i-heroicons-newspaper-20-solid'
    - title: 'Lightning fast'
      description: 'The CWA is built from the ground up to be fast. Implementing tactics for the fastest First Contentful Paint, and smart static cache layers, you can improve the UX and increase conversions.'
      icon: 'i-heroicons-bolt-20-solid'
    - title: 'Stay in sync'
      description: 'Learn how your website users will get realtime updates and never miss a beat with our integration of Mercure.'
      icon: 'i-heroicons-arrow-path-20-solid'

benefits:
  sections:
    - title: 'Supercharge your<br><span class="text-primary-400">business</span>'
      description: The CWA reduces your team's workload and increases productivity.
      id: supercharge
      align: right
      image: '/images/home/home-supercharge.svg'
      features:
        - name: For Agencies
          description: Streamline workflows, increase output and impress your clients.
          icon: i-heroicons-presentation-chart-line
        - name: For Developers
          description: A DX which will keep developers smiling as they realise how simple it can be to add advanced functionality, while staying in control.
          icon: i-heroicons-code-bracket
        - name: For Web Admins
          description: In-line and intuitive website and content management makes updating the website or creating new pages impressively easy.
          icon: i-heroicons-device-phone-mobile
      links:
        - label: Built for business
          to: /built-for-business
          color: gray
          icon: i-heroicons-arrow-right-20-solid
          trailing: true
          size: xl
          class: ml-0
    - title: 'The missing link in<br><span class="text-primary-400">website builders</span>'
      description: Traditional website builders take control and crucial decisions away from the professionals while increasing complexity for users.
      id: professionals
      align: left
      image: '/images/home/home-builders.svg'
      features:
        - name: Build the website you want
          description: No need to hack other website builders to work for you - components are built by professionals, custom to users' needs.
          icon: i-heroicons-computer-desktop
        - name: Easy to make, easy to use
          description: Using the CWA, styles can manually pre-configured to match branding. No more endless choices for administrators resulting in off brand styling.
          icon: i-heroicons-paint-brush
        - name: Seamless integration of new pages
          description: With our balance of flexibility and restrictions, new pages are easy to integrate seamlessly and beautifully into the website.
          icon: i-heroicons-puzzle-piece
      links:
        - label: More about the CWA
          to: /about
          color: gray
          icon: i-heroicons-arrow-right-20-solid
          trailing: true
          size: xl
          class: ml-0
    - title: 'Built on the<br><span class="text-primary-400">shoulders of giants</span>'
      description: |
        The CWA has been built on the shoulders of giants providing maximum flexibility and extensibility.
      id: shoulders
      align: right
      image: '/images/home/home-giants.svg'
      features:
        - name: Symfony bundle with API Platform
          description: An incredibly powerful and well maintained framework. Extend API Platform and Symfony functionality for services such as SAML authentication protocols or API proxies.
          icon: i-custom-api-platform
        - name: Front-end Nuxt module
          description: Nuxt and VueJS are one of the most enjoyable front-end frameworks to use. Our CWA Nuxt module provides easy to use composables along with a full management system.
          icon: i-simple-icons-nuxtdotjs
#      links:
#        - label: Discover more
#          to: /
#          color: gray
#          icon: i-heroicons-arrow-right-20-solid
#          trailing: true
#          size: xl
#          class: ml-0

code:
  tabs:
    - key: back-end
      label: '1. Back End'
    - key: front-end
      label: '2. Front End'
  backEnd:
    description: |
      With our API built on top of API Platform and Symfony, it is incredibly simple to setup a component.
      <br><br>
      We provide helpful traits and attributes to quickly add advanced functionality such as draft/live components or handling file uploads.
    code: |
      ```php [api/src/Entity/Title.php]
      <?php

      namespace App\Entity;

      use ApiPlatform\Metadata\ApiResource;
      use Doctrine\ORM\Mapping as ORM;
      use Silverback\ApiComponentsBundle\Annotation as Silverback;
      use Silverback\ApiComponentsBundle\Entity\Core\AbstractComponent;
      use Silverback\ApiComponentsBundle\Entity\Utility\PublishableTrait;
      use Symfony\Component\Validator\Constraints as Assert;

      #[Silverback\Publishable]
      #[ApiResource(mercure: true)]
      #[Orm\Entity]
      class Title extends AbstractComponent
      {
        use PublishableTrait;

        #[Assert\NotBlank(groups: ['Title:published'])]
        #[Orm\Column(type: 'text', nullable: true)]
        public ?string $title = null;
      }

      ```
  frontEnd:
    tabs:
      - key: page
        label: 'Page'
        contentDoc: '_partials/front-end-page'
        description: |
          The CWA Nuxt module means you have nearly all the functionality you need right from the start.
          <br><br>
          You'll quickly setup layouts and pages, using our `<CwaComponentGroup />`{class="mx-0.5 px-1 py-0.5 rounded font-bold text-nowrap text-base bg-primary-100 dark:bg-primary-800"} Vue component to define where your CWA components will appear.
        code: |
          ```vue [app/cwa/pages/PrimaryPageTemplate.vue]
          <template>
            <div>
              <CwaComponentGroup
                reference="primary"
                :location="props.iri"
              />
            </div>
          </template>

          <script setup lang="ts">
            import type { IriProp }
              from '#cwa/runtime/composables/cwa-resource'

            const props = defineProps<IriProp>()
          </script>
          ```
      - key: component
        label: 'Component'
        contentDoc: '_partials/front-end-component'
        description: |
          With a few composables and very little code you can quickly create your CWA components.
          :br :br
          Load the data provided by the API and add any functionality you need just like any other Vue component.
        code: |
          ```vue [app/cwa/components/Title/Title.vue]
          <template>
            <h1 class="text-primary text-4xl font-extrabold">
              {{ resource?.data?.title || 'No Title' }}
            </h1>
          </template>

          <script setup lang="ts">
            import { toRef } from 'vue'
            import {
              useCwaResource
            } from '#imports'
            import type { IriProp }
              from '#cwa/runtime/composables/cwa-resource'

            const props = defineProps<IriProp>()

            const { getResource, exposeMeta } =
              useCwaResource(toRef(props, 'iri'))

            const resource = getResource()

            defineExpose(exposeMeta)
          </script>
          ```

      - key: admin
        label: 'Admin'
        contentDoc: '_partials/front-end-admin'
        description: |
          Once you have your data and component setup, all thatâ€™s left is to add your own custom tabs into our Components Manager Toolbar.
          :br :br
          With very little code (using our composables and pre-built Vue components) the end-user will be able to manage this new component using the component manager toolbar.
        code: |
          ```vue [app/cwa/components/Title/admin/Title.vue]
          <template>
            <CwaUiFormLabelWrapper label="Title">
              <CwaUiFormInput
                v-model="titleModel.model.value"
              />
            </CwaUiFormLabelWrapper>
          </template>

          <script setup lang="ts">
            import {
              useCwaResourceManagerTab,
              useCwaResourceModel
            } from '#imports'

            const { exposeMeta, iri } =
              useCwaResourceManagerTab({ name: 'Title' })

            const titleModel =
              useCwaResourceModel<string>(iri, 'title')

            defineExpose(exposeMeta)
          </script>
          ```



contributors:
  title: With help from our <span class="text-primary">amazing community</span>
  align: center
