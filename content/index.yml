title: 'CWA - Components Web App Documentation'
description: With the CWA you will create feature-rich, totally custom web apps with surprisingly little code
navigation: false
hero:
  title: 'Components Web App'
  description: 'Your new <span class="text-primary-400 font-semibold">low-code solution</span> for creating feature-rich, totally <span class="text-primary-400 font-semibold">custom decoupled web apps</span> including an <span class="text-primary-400 font-semibold">intuitive website builder</span> interface'
  orientation: vertical
#  links:
#    - label: Get started
#      icon: i-heroicons-arrow-right-20-solid
#      trailing: true
#      to: '/getting-started'
#      size: lg
#    - label: Use this template
#      icon: i-simple-icons-github
#      size: lg
#      color: gray
#      to: https://github.com/nuxt-ui-pro/docs
#      target: _blank
  code: |
    ```bash [Terminal]
    gh repo create my-website --template="components-web-app/components-web-app"
    ```
features:
  title: 'That feeling when<br><span class="text-primary-400">all the hard work is done for you</span>'
#  links:
#    - label: 'Explore Nuxt UI Pro'
#      icon: 'i-simple-icons-nuxtdotjs'
#      trailingIcon: 'i-heroicons-arrow-right-20-solid'
#      color: 'gray'
#      to: 'https://ui.nuxt.com/pro'
#      target: '_blank'
#      size: lg
  items:
    - title: 'Draft & Published Components'
      description: 'Allow users to start making change to their component, and set it to publish when they are ready.'
      icon: 'i-heroicons-newspaper-20-solid'
      to: '/getting-started'
    - title: 'Lightning fast'
      description: 'We have built the CWA from the ground up with speed in mind. Each resource is very small and cacheable - we handle it all.'
      icon: 'i-heroicons-bolt-20-solid'
      to: '/about'
    - title: 'Stay in sync'
      description: 'Learn how we have leveraged Mercure to improve collaboration and make sure your website visitors never miss an update.'
      icon: 'i-heroicons-arrow-path-20-solid'
      to: '/getting-started'
#    - title: 'Intuitive website management UI'
#      description: 'Discover how to build your admin tabs into our component manager bar with ease.'
#      icon: 'i-heroicons-pencil-square-20-solid'
#      to: '/getting-started'
#    - title: 'File uploads'
#      description: 'You can quickly and easily integrate storage solutions such as Google Cloud and AWS S3 within your website using our Flysystem integration.'
#      icon: 'i-heroicons-arrow-up-tray-20-solid'
#      to: '/getting-started'
#    - title: 'Get started with Docker'
#      description: 'We provide Dockerfiles and Docker Compose configurations to get you up and running quickly.'
#      icon: 'i-simple-icons-docker'
#      to: '/getting-started'

benefits:
  sections:
    - title: 'Supercharge your<br><span class="text-primary-400">business</span>'
      description: The CWA reduces your team's workload and increases productivity.
      id: supercharge
      align: right
      image: '/images/home/home-supercharge.svg'
      features:
        - name: For Agencies
          description: Streamline workflows, increase productivity and impress your clients.
          icon: i-heroicons-presentation-chart-line
        - name: For Developers
          description: A DX which will keep you smiling as you realise how simple it can be to add such advanced functionality.
          icon: i-heroicons-code-bracket
        - name: For Web Admins
          description: An in-line and intuitive website and content management makes updating the website or creating new pages impressively easy.
          icon: i-heroicons-device-phone-mobile
      links:
        - label: Built for business
          to: /built-for-business
          color: gray
          icon: i-heroicons-arrow-right-20-solid
          trailing: true
          size: xl
          class: ml-0
    - title: 'Web apps made by<br><span class="text-primary-400">the professionals</span>'
      description: Unlike other website builders, we leave don't believe website admins should have unlimited style choices.
      id: professionals
      align: left
      image: '/images/home/home-professionals.svg'
      features:
        - name: Stay on brand
          description: We believe your website components should be fit the branding as you envisaged
          icon: i-heroicons-paint-brush
        - name: Pre-configure styles
          description: You define the styles that a website admin can select from.
          icon: i-heroicons-swatch
        - name: Seamless integration of new pages
          description: With this balance of flexibility and restrictions, new pages will integrate seamlessly and beautifully into their existing website.
          icon: i-heroicons-puzzle-piece
      links:
        - label: More about the CWA
          to: /about
          color: gray
          icon: i-heroicons-arrow-right-20-solid
          trailing: true
          size: xl
          class: ml-0
    - title: 'Built on the<br><span class="text-primary-400">shoulders of giants</span>'
      description: |
        The CWA has been built on the shoulders of giants providing maximum flexibility and extensibility.
      id: shoulders
      align: right
      image: '/images/home/home-giants.svg'
      features:
        - name: API Platform
          description: Incredibly powerful, well maintained and stable frameworks. Extend their functionality further for services such as SAML authentication protocols or API proxies.
          icon: i-custom-api-platform
        - name: Nuxt module
          description: Creating front-end applications using Nuxt and VueJS is a joy and the strong vibrant community behind all of these frameworks gives confidence and re-assurance your project will be secure and stable going on into the future.
          icon: i-simple-icons-nuxtdotjs
#      links:
#        - label: Discover more
#          to: /
#          color: gray
#          icon: i-heroicons-arrow-right-20-solid
#          trailing: true
#          size: xl
#          class: ml-0

code:
  tabs:
    - key: back-end
      label: '1. Back End'
    - key: front-end
      label: '2. Front End'
  backEnd:
    description: |
      With an API built on top of API Platform and Symfony, it is incredibly simple to setup a component.
      <br><br>
      We provide helpful traits and attributes to quickly add advanced functionality such as draft/live components or handling file uploads.
    code: |
      ```php [api/src/Entity/Title.php]
      <?php

      namespace App\Entity;

      use ApiPlatform\Metadata\ApiResource;
      use Doctrine\ORM\Mapping as ORM;
      use Silverback\ApiComponentsBundle\Annotation as Silverback;
      use Silverback\ApiComponentsBundle\Entity\Core\AbstractComponent;
      use Silverback\ApiComponentsBundle\Entity\Utility\PublishableTrait;
      use Symfony\Component\Validator\Constraints as Assert;

      #[Silverback\Publishable]
      #[ApiResource(mercure: true)]
      #[Orm\Entity]
      class Title extends AbstractComponent
      {
        use PublishableTrait;

        #[Assert\NotBlank(groups: ['Title:published'])]
        #[Orm\Column(type: 'text', nullable: true)]
        public ?string $title = null;
      }

      ```
  frontEnd:
    tabs:
      - key: page
        label: 'Page'
        contentDoc: '_partials/front-end-page'
        description: |
          We have built a Nuxt module which means you have nearly all the functionality you need right from the start.
          <br><br>
          You’ll quickly setup layouts and pages, using our `<CwaComponentGroup />`{class="mx-0.5 px-1 py-0.5 rounded font-bold text-nowrap text-base bg-primary-100 dark:bg-primary-800"} Vue component to define where your CWA components will appear.
        code: |
          ```vue [app/cwa/pages/PrimaryPageTemplate.vue]
          <template>
            <div>
              <CwaComponentGroup
                reference="primary"
                :location="props.iri"
              />
            </div>
          </template>

          <script setup lang="ts">
            import type { IriProp }
              from '#cwa/runtime/composables/cwa-resource'

            const props = defineProps<IriProp>()
          </script>
          ```
      - key: component
        label: 'Component'
        contentDoc: '_partials/front-end-component'
        description: |
          With a few composables and very little code you can quickly create your CWA components.
          <br><br>
          Load the data provided by the API and add any functionality you need just like any other Vue component.
          <br><br>
          Our playground has some examples of different common functionality you may use, such as inline HTML editing and displaying images.
        code: |
          ```vue [app/cwa/components/Title/Title.vue]
          <template>
            <h1 class="text-primary text-4xl font-extrabold">
              {{ resource?.data?.title || 'No Title' }}
            </h1>
          </template>

          <script setup lang="ts">
            import { toRef } from 'vue'
            import {
              useCwaResource
            } from '#imports'
            import type { IriProp }
              from "#cwa/runtime/composables/cwa-resource";

            const props = defineProps<IriProp>()

            const { getResource, exposeMeta } =
              useCwaResource(toRef(props, 'iri'))

            const resource = getResource()

            defineExpose(exposeMeta)
          </script>
          ```

      - key: admin
        label: 'Admin'
        contentDoc: '_partials/front-end-admin'
        description: |
          Once you have your data and component setup, all that’s left is to add your own custom tabs into our Components Manager Toolbar.
          <br><br>
          With very little code and using our composables and pre-built Vue components, the end-user will be able to manage this new component using the website builder front-end.
        code: |
          ```vue [app/cwa/components/Title/admin/Title.vue]
          <template>
            <CwaUiFormLabelWrapper label="Title">
              <CwaUiFormInput
                v-model="titleModel.model.value"
              />
            </CwaUiFormLabelWrapper>
          </template>

          <script setup lang="ts">
            import {
              useCwaResourceManagerTab,
              useCwaResourceModel
            } from '#imports'

            const { exposeMeta, iri } =
              useCwaResourceManagerTab({ name: 'Title' })

            const titleModel =
              useCwaResourceModel<string>(iri, 'title')

            defineExpose(exposeMeta)
          </script>
          ```



contributors:
  title: With help from our <span class="text-primary">amazing contributors</span>
  align: center
